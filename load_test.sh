#!/opt/bin/bash
#===============================================================================
#
#          FILE:  load_test.sh
# 
#         USAGE:  ./load_test.sh 
# 
#   DESCRIPTION:  Скрипт проверки нагрузки процессора по команде uptime
# 
#       OPTIONS:  ---  -w (w1,w15,w15) -c (c1,c5,c15)
#  REQUIREMENTS:  ---
#          BUGS:  ---
#         NOTES:  ---
#        AUTHOR:  Ptah57 Oziris (), ptah57@yandex.ru
#       COMPANY:  Ra&Pt
#       VERSION:  1.0
#       CREATED:  01/06/2025 04:45:50 PM MSK
#      REVISION:  ---
#===============================================================================
##########################################################################################
#source /opt/lib/check_ip.sh     #  в случае выноса функции в отдельную библиотеку
##########################################################################################
# Раздел переменных - отдадим дань Коболу 8)
##########################################################################################
# Возвращаемый статус (код результата работы скрипта)
##########################################################################################
OK=0
WARNING=1
CRITICAL=2
UNKNOWN=3
##########################################################################################
PING_HOST=127.0.0.1                # по умолчанию работаем с локальным сервером
LEVEL_WARNING=4.18,3.21,2.91       # соответствует значению парметра ключа -w по умолчанию за 1,5.15 минут
LEVEL_CRITICAL=10.21,9.11,8.11     # соответствует значению парметра ключа -c по умолчанию за 1,5.15 минут
Current_LA=0.00,0.00,0.00          # в качестве разделителя значений - запятая
Current_LA1=0.00                   # в качестве разделителя целой и дробной части - точка
Current_LA5=0.00
Current_LA15=0.00
htype=mips                         # по умолчанию работает на mips процессоре
Programm=$0                        # параметры для передачи в функции
P1=$1
P2=$2
P3=$3
P4=$4
P_Num=$#
P_W=0.00,0.00,0.00                 #  параметры проверки на предупреждение перегрузки
P_C=0.00,0.00,0.00                 #  параметры проверки на критическую  перегрузку
P_W1=0.00                          #  значение предупреждения перезрузки за 1 минуту
P_W5=0.00                          #  значение предупреждения перезрузки за 5 минут
P_W15=0.00                         #  ззначение предупреждения перезрузки за 15 минут
P_C1=0.00                          #  значение критической  перезрузки за 1 минуту
P_C5=0.00                          #  значение критической  перезрузки за 5 минут
P_C15=0.00                         #  значение критической  перезрузки за 1 минут
Cr_Fl=0                            #  флаг критического состояния загрузки 
Wr_Fl=0                            #  флаг предупредительного  состояния загрузки 
##########################################################################################
# Проверка правильности ввода адреса хоста

check_ip() {
  local ip=$PING_HOST
    # Регулярное выражение для проверки формата IPv4
      if [[ $ip =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$ ]]; then
        for i in {1..4}; do
          if [[ ${BASH_REMATCH[$i]} -gt 255 || ${BASH_REMATCH[$i]} -lt 0 ]]; then
            echo "Некорректный IP адрес."
	    return 1
	  fi
	done
	#    echo "IP адрес корректен."   #  не загромождать вывод ,  использовать только для отладки
	return 0
	else
	  echo "Некорректный формат IP адреса."
	  return 1
      fi
}

##############################################################################################age() {
help_usage() {
  echo "Usage:"
  echo " $0 -w (LEVEL_WARNING1),(LEVEL_WARNING5),(LEVEL_WARNING15)  \
  -c (LEVEL_CRITICAL1),(LEVEL_CRITICAL5),(LEVEL_CRITICAL15)" 
  echo " $0 (-v | --version)"
  echo " $0 (-h | --help)"
  echo "_______________________________________________________" 
                    
}
##########################################################################################
help_version() {
  echo "_______________________________________________________"
  echo "load_test.sh ( это аналог плагина nagios-plugins load_check ) v. 0.01"
  echo "автор Ptah57 Oziris <ptah57@mail.ru 2024 г. >"
}

##########################################################################################
exit_abnormal() {                         # Функция для выхода в случае ошибки.
  help_version
  help_usage
  exit 2
}
##########################################################################################
check_w_arg() {
# Регулярное выражение
  regex='^[0-9]{1,4}\.[0-9]{1,2},[0-9]{1,2}%+$' 
    if [[ $LEVEL_WARNING =~ $regex ]]; then
      :
      #    echo "Строка аргумента параметра -w соответствует шаблону."
    else
      echo "Строка аргумента параметра -w не соответствует шаблону."
      exit_abnormal
    fi
}
##########################################################################################
check_c_arg() {
# Регулярное выражение
  regex='^[0-9]{1,4}\.[0-9]{1,2},[0-9]{1,2}%+$'
    if [[ $LEVEL_CRITICAL =~ $regex ]]; then
      :
      #    echo "Строка аргумента параметра -c соответствует шаблону."
    else
      echo "Строка аргумента параметра -c не соответствует шаблону."
      exit_abnormal
    fi
}

##########################################################################################
hard_type() {

htype=$(uname -m)

}

##########################################################################################
# код для отладки
##########################################################################################
debug_kod() {
echo "$Programm"
echo "$P1"
echo "$P2"
echo "$P3"
echo "$P4"
echo "передано параметров = $P_Num"
echo "Тип машины $htype"
echo " $PING_HOST"
echo " default w $LEVEL_WARNING"
echo " default c $LEVEL_CRITICAL"
echo " Current_LA=$Current_LA"
echo " Current_LA1=$Current_LA1"
echo " Current_LA5=$Current_LA5"
echo " Current_LA15=$Current_LA15"
echo "P_W=$P_W"
echo "P_C=$P_C"
echo "P_W1=$P_W1"
echo "P_W5=$P_W5"
echo "P_W15=$P_W15"
echo "P_C1=$P_C1"
echo "P_C5=$P_C5"
echo "P_C15=$P_C15"
echo "Cr_Fl=$Cr_Fl"
echo "Wr_Fl=$Wr_Fl"
}
##########################################################################################
# определяем срежнюю загрузку процессора за 1, 5 и 15 минут
##########################################################################################
LA_get() {
case $htype in
  mips)
    Current_LA=$(uptime | cut -d ',' -f 2,3,4 | cut -d ' ' -f5-7 ) 
    Current_LA1=$(echo $Current_LA | cut -d ',' -f1)
    Current_LA5=$(echo $Current_LA | cut -d ',' -f2)
    Current_LA15=$(echo $Current_LA | cut -d ',' -f3)
    ;;
  x86_64)
    Current_LA=$(uptime | awk '{print $8,$9,$10}') 
    Current_LA1=$(echo $Current_LA | cut -d ' ' -f1)
    Current_LA5=$(echo $Current_LA | cut -d ' ' -f2)
    Current_LA15=$(echo $Current_LA | cut -d ' ' -f3)
    ;;
  *)
    exit_abnormal
    ;;
esac
}
##############################################################################################
#  проверка есть ли вообще параметры
##############################################################################################
##############################################################################################
#===============================================================================
if [[ -z "$1" ]];
  then
  echo "Отсутствуют параметры ! Используется форма: ./`basename $0` < -h или --help> <-v или --version> \ 
  -w (warning1,warning5,warnibig15) -c (critical1,critical5,critical15)"
  echo "_______________________________________________________________________________________"      
  help_usage
  exit 3
fi
if [ "$1" = "-h" -o "$1" = "--help" -o "$1" = "-v" -o "$1" = "--version" ];
  then
  help_version
  echo ""
  help_usage
  echo ""
  echo "Используется форма: ./`basename $0` < -h или --help> <-v или --version> \ 
  -w (warning1,warninig5,warning15) -c (critical1,critical5,critical15)"
echo ""
exit 3
fi
#-------------------------------------------------------------------------------------------------
##############################################################################################
#  Разбор ключей и параметров
##############################################################################################
while getopts "w:c:" options; do             # Цикл: выбора опций по одной,
                                             # с использованием silent-проверки
                                             # ошибок. Опции -w и -c должны
                                             # принимать аргументы.
  case "${options}" in                       # 
    w)                                       # Если это опция w, то установка
      P_W=${OPTARG}                          # $P_W в указанное значение.
      P_W1=$(echo $P_W | cut -d',' -f1)
      P_W5=$(echo $P_W | cut -d',' -f2)
      P_W15=$(echo $P_W | cut -d',' -f3)
      ;;
    c)
      P_C=${OPTARG}                          # $P_C в указанное значение.
      P_C1=$(echo $P_C | cut -d',' -f1)
      P_C5=$(echo $P_C | cut -d',' -f2)
      P_C15=$(echo $P_C | cut -d',' -f3)
      ;;
    :)                                       # Если ожидаемый аргумент опущен:
      echo "Error: -${OPTARG} здесь требуется параметр ."
      exit_abnormal                          # Ненормальный выход.
      ;;
  *)                                         # Если встретилась неизвестная опция:
       exit_abnormal                         # Ненормальный выход.
       ;;
esac
done
#-----------------------------------------------------------------------------------------------------------
hard_type             #  провера на тип процессора
LA_get                #  получить данные по загрузке процессора
Cr_Fl=$( echo "$Current_LA15>$P_C15" | /opt/bin/bc -l )
Wr_Fl=$( echo "$Current_LA15>$P_W15" | /opt/bin/bc -l )

if [ $Cr_Fl -eq 1 ]  
  then
    echo "SERVICE STATUS: CRITICAL load average: $Current_LA"
    debug_kod  
    exit $CRITICAL
fi
if [ $Wr_Fl -eq 1 ] 
 then
   echo "SERVICE STATUS: WARNING load average: $Current_LA"
   debug_kod
   exit $WARNING
fi
echo "SERVICE STATUS: OK load average: $Current_LA" 
debug_kod             #  вывод отладочной информации
exit $OK
